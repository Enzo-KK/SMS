#!/bin/bash
# подключаемые функции 
# база 
# getpu.acc_indication
# поля
# nom l_chet n_elec elec n_hv1 hv1 n_gv1 gv1 n_hv2 hv2 n_gv2 gv2 n_hv3 hv3 n_gv3 gv3 n_hv4 hv4 n_gv4 gv4 phone email
####################################
####################################
# описываем соединение с сервером MySQL, и принимаем первым аргументом нужные команды
connect () {
mysql -D getpu -u sms_acc -p1313 -Bse "$1"
}
####################################
####################################
# формирование правильного файла хмл 
mak_gud_xml() {
	# запускается из load_xml с параметром 'имя файла хмл'
	# правим хмл файл
	# сначала меняем русский 
	# меняем на раз
	# sed -e 's/Раздел/razdel/g' 11_IPK.xml > short0
	sed -e 's/Раздел/razdel/g' $1 > short0
	sed -e 's/Строка/string/g' short0 > short1
	sed -e 's/УПД/upd/g' short1 > short0
	sed -e 's/ПриборыУчета/priboriucheta/g' short0 > short1
	sed -e 's/ПриборУчета/pribor/g' short1 > short0
	# теперь правим разделы
	# множественные строки данных включены в раздел 2, а все вместе в раздел 1
	# т.о. мы и адрес пропишем в таблицу показаний для идентификации по объекту недвижимости
	sed -e 's/<razdel1>//g' short0 > short1
	sed -e 's/<\/razdel1>//g' short1 > short0
	sed -e 's/<\/razdel2>//g' short0 > short1
	sed -e 's/<razdel3>//g' short1 > short0
	sed -e 's/<\/razdel3>//g' short0 > short1
	sed -e 's/<razdel4>//g' short1 > short0
	sed -e 's/<\/razdel4>//g' short0 > short1
	sed -e 's/<razdel5\/>//g' short1 > short0
	sed -e 's/<priboriucheta>//g' short0 > short1
	sed -e 's/<\/priboriucheta>/<\/razdel2>/g' short1 > all_ipk.xml
	cp all_ipk.xml /var/lib/mysql-files/
}

# загрузка хмл в базу данных
fill_base () {
connect "LOAD XML INFILE '/var/lib/mysql-files/all_ipk.xml' INTO TABLE person ROWS IDENTIFIED BY '<upd>';"
connect "LOAD XML INFILE '/var/lib/mysql-files/all_ipk.xml' INTO TABLE money ROWS IDENTIFIED BY '<razdel2>';"
connect "LOAD XML INFILE '/var/lib/mysql-files/all_ipk.xml' INTO TABLE data_indic ROWS IDENTIFIED BY '<string>';"
connect "LOAD XML INFILE '/var/lib/mysql-files/all_ipk.xml' INTO TABLE pribori ROWS IDENTIFIED BY '<pribor>';"

connect "delete from data_indic where Потребление is NULL;"
}

####### проверка повторной отправки тех же показаний #######
chk_povtor(){
local lc=$1
local el=$2
local hv=$3
local gv=$4
# пока пишу, отключил
#if [[ 1 ]]; then
#	echo 'пропуск проверки'
#else
	#echo 'сверяю поданные показания на предмет повтора'
	result=$(connect "select lchet, usluga, nomer, pokazania, date, phone 
	from polucheno  where lchet like '$lc' and usluga like 'Электро%' and pokazania like '$el'");
	
	# проверка результата запроса (длина строки)
	lns=${#result}
	# если результат не пустой- проверяем дальше
	if ! [[ $lns<1 ]]; then
	#echo 'электро повтор'
		result=$(connect "select lchet, usluga, nomer, pokazania, date, phone 
		from polucheno  where lchet like '$lc' and usluga like 'Холодное%' and pokazania like '$hv'");
		lns=${#result}
		if ! [[ $lns<1 ]]; then
		#echo 'холодное повтор'
			result=$(connect "select lchet, usluga, nomer, pokazania, date, phone 
			from polucheno  where lchet like '$lc' and usluga like 'Горячее%' and pokazania like '$gv'");
			lns=${#result}
			if ! [[ $lns<1 ]]; then
			echo 'повтор показаний'
				exit 0
			fi
		fi
	fi
#fi	
}
#############

# основная функция обработки
# передаются параметрами: $lsch $ele $hov $gov $from
########################################################
########################################################
exch_bd(){
# получаем переданные значения
local lc=$3
local el_new=$4
local hv_new=$5
local gv_new=$6
# с телефоном не определился.. отслеживать или нет соответствие
local fr=$1
local fn=$2
##################### доработка >>>>>>>>>
# номер счетчика электроэнергии
local eln="" 
# номер счетчика холодной воды, при наличии *
local hvn=""
# номер счетчика горячей воды, при наличии *
local gvn=""
# текущая дата для записи в базу
#date_now=$(date)
#date_now=${date_now:7:2}
# можно проще
# date_now=$(date +%d.%m.%y)
# дата в формате смс
date_now=$(date '+%y-%m-%d %H:%M:%S')
# есть ли лицевой уже в основной базе
no_in_base=0
# сначала показания нулевые
el_chk=0
ho_chk=0
go_chk=0


##### проверяем на наличие номера счетчика - есть ли звездочка
if ( echo "$el_new" | grep "*" > /dev/null ); then
	# получаем номер прибора
	eln=$(echo "$el_new" | cut -d "*" -f1)
	# получаем показания
	el_new=$(echo "$el_new" | cut -d "*" -f2)
fi
if ( echo "$hv_new" | grep "*" > /dev/null ); then
	hvn=$(echo "$hv_new" | cut -d "*" -f1)
	hv_new=$(echo "$hv_new" | cut -d "*" -f2)
fi
if ( echo "$gv_new" | grep "*" > /dev/null ); then
	gvn=$(echo "$gv_new" | cut -d "*" -f1)
	gv_new=$(echo "$gv_new" | cut -d "*" -f2)
fi
##################### доработка <<<<<<<<<

# отсекаем дребедень
el_new=${el_new//[^0-9.,]/}
hv_new=${hv_new//[^0-9.,]/}
gv_new=${gv_new//[^0-9.,]/}

# преобразуем в значение с плавающей точкой
el_new=${el_new/,/.}
hv_new=${hv_new/,/.}
gv_new=${gv_new/,/.}

# проверяем пустые значения
# и отсутствие цифр
is_dig=${el_new//[^0-9]/}
if [[ ${#is_dig} < 1 ]]; then
    # пусто
    el_new=0
fi
is_dig=${hv_new//[^0-9]/}
if [[ ${#is_dig} < 1 ]]; then
    # пусто
    hv_new=0
fi
is_dig=${gv_new//[^0-9]/}
if [[ ${#is_dig} < 1 ]]; then
    # пусто
    gv_new=0
fi
# тогда в дальнейшем можно упростить проверки, т.е. без bc
# 

# проверка принятых показаний
# echo "data: $lc $el $ho $go" 
	###############
	# сначала проверяем сколько у чела квартир, если больше одной - футболим
	moreone=$(connect "select count(*) from person where person.КодЛицевогоСчета like '$lc'") ; 
	if [[ $moreone>1 ]]; then
		send_error "Невозможно принять показания.\nОбратитесь в офис УК." $fr
		exit 0
	fi
	###############
	# проверяем отправлены хоть какие то значения
	#is_data=$(echo "$el_new+$hv_new+$gv_new" | bc)
	#if [[ $(echo "${is_data} == 0" | bc) -eq 1 ]]; then
	# упрощаю
	if [[ $(echo "$el_new+$hv_new+$gv_new" | bc) == 0 ]]; then
		send_error "В полученном СМС нулевые показания." $fr
		exit 0
	fi
	##############
	# теперь проверяем корректность значений

	# первоначально делал запрос по базе дата-индик, теперь по базе приборы
	#result=$(connect "select p.КодЛицевогоСчета, p.ФИОСобственника, p.Адрес, i.НаименованиеУслуги, i.Потребление 
	#	from person p, data_indic i where p.КодЛицевогоСчета = i.НомерЛицевогоСчета and p.КодЛицевогоСчета = '$lc' 
	#	and i.Потребление>0 and (i.НаименованиеУслуги = 'Электроэнергия' or i.НаименованиеУслуги = 'Холодное водоснабжение (счетчик)' 
	#	or i.НаименованиеУслуги = 'Горячее водоснабжение (счетчик)')");

	# первоначально делал запрос по базе дата-индик, теперь по базе приборы
	#result=$(connect "select p.КодЛицевогоСчета, p.ФИОСобственника, p.Адрес, i.НомерПрибораУчета, i.Услуга, i.ЗначениеПрибораУчета 
	#	from person p, pribori i where p.КодЛицевогоСчета = i.НомерЛицевогоСчета and p.КодЛицевогоСчета = '$lc' 
	#	and i.ЗначениеПрибораУчета>0 and (i.Услуга like 'Электроэнергия' or i.Услуга like 'Холодное водоснабжение%' 
	#	or i.Услуга like 'Горячее водоснабжение%')");
	## нафига собирать весь хлам	
	result=$(connect "select НомерПрибораУчета, Услуга, ЗначениеПрибораУчета from pribori 
		where НомерЛицевогоСчета = '$lc' and ЗначениеПрибораУчета>0 and (Услуга like 'Электроэнергия' or Услуга like 'Холодное водоснабжение%' or Услуга like 'Горячее водоснабжение%')");
	
#	 echo "result: $result"

	 # проверка результата запроса (длина строки)
	 lns=${#result}
#	 echo "lengh=$lns"
	# если результат пустой- лицевого в базе нет
	# if [ -z $result ]; then
	if [[ $lns<1 ]]; then
		# лицевого в основной базе нет
		no_in_base=1
		 echo "добавляем запись"
		# добавляем записи в базу. нет! пока не добавляем!
		## connect "insert into acc_indication(l_chet, elec, hv1, gv1, phone) values($lc, $el, $ho, $go, $fr)";
		#пока отключил. не надо
		#connect "insert into person(КодЛицевогоСчета, Телефон) values($lc, $fr)";
		#connect "insert into data_indic(НомерЛицевогоСчета, НаименованиеУслуги, Потребление) values($lc, 'Электроэнергия', $el_new)";
		#connect "insert into data_indic(НомерЛицевогоСчета, НаименованиеУслуги, Потребление) 
		#values($lc, 'Холодное водоснабжение (счетчик)', $hv_new)";
		#connect "insert into data_indic(НомерЛицевогоСчета, НаименованиеУслуги, Потребление) 
		#values($lc, 'Горячее водоснабжение (счетчик)', $gv_new)";
		# просто заполняем начальные показания нулями
		el_old=0
		hv_old=0
		gv_old=0
	else
		echo "проверяем показания"

### получаем значения из данных запроса
		##################### доработка >>>>>>>>>
		#len=${#eln}
		# есть ли номер прибора учета, находим запись по номеру прибора
    	if [[ ${#eln} > 0 ]]; then
			is_nom_corr=`echo -e "$result" | grep -m 1 $eln`
			# проверим правильный ли введен номер
			if [[ ${#is_nom_corr} > 0 ]]; then
				# номер верный
				el_old=$is_nom_corr
			else
				# а если указан неверный номер прибора, пишем заведомо огромные показания чтоб не принялись
			el_old="Электроэнергия 999999999"
			fi
		else
		# номера нет, тогда по ключевому слову
			el_old=`echo -e "$result" | grep -m 1 "Электроэнергия"`
		fi
		el_old=${el_old: -15}
		el_old=`echo "$el_old" | cut -d "я" -f 2`
	# преобразуем в значение с плавающей точкой
		el_old=${el_old/,/.}

		# есть ли номер прибора учета
		#len=${#hvn}
    	if [[ ${#hvn} > 0 ]]; then
			is_nom_corr=`echo -e "$result" | grep -m 1 $hvn`
			# проверим правильный ли введен номер
			if [[ ${#is_nom_corr} > 0 ]]; then
				# номер верный
				hv_old=$is_nom_corr
			else
				# а если указан неверный номер прибора, пишем заведомо огромные показания чтоб не принялись
			hv_old="Холодное) 999999999"
			fi
		else
			hv_old=`echo -e "$result" | grep -m 1 "Холодное"`
		fi
		hv_old=${hv_old: -15}
		hv_old=`echo "$hv_old" | cut -d ")" -f 2`
		hv_old=${hv_old/,/.}

		# есть ли номер прибора учета
		#len=${#gvn}
    	if [[ ${#gvn} > 0 ]]; then
			is_nom_corr=`echo -e "$result" | grep -m 1 $gvn`
			# проверим правильный ли введен номер
			if [[ ${#is_nom_corr} > 0 ]]; then
				# номер верный
				gv_old=$is_nom_corr
			else
				# а если указан неверный номер прибора, пишем заведомо огромные показания чтоб не принялись
			gv_old="Горячее) 999999999"
			fi
		else
			gv_old=`echo -e "$result" | grep -m 1 "Горячее"`
		fi
		gv_old=${gv_old: -15}
		gv_old=`echo "$gv_old" | cut -d ")" -f 2`
		gv_old=${gv_old/,/.}
		##################### доработка <<<<<<<<<<<<<
	fi

# тут извлекаем максимальные данные изменений из файла max_data.dat
		max_el=`grep -e "Электро:" /home/constantin/sms/max_data.dat | formail -zx Электро:`
		max_hv=`grep -e "ХВС:" /home/constantin/sms/max_data.dat | formail -zx ХВС:`
		max_gv=`grep -e "ГВС:" /home/constantin/sms/max_data.dat | formail -zx ГВС:`

# операции с плавающей точкой только через калькулятор
		sum_el=$(echo "$el_old+$max_el" | bc)
		sum_hv=$(echo "$hv_old+$max_hv" | bc)
		sum_gv=$(echo "$gv_old+$max_gv" | bc)

# и сверяем принятые показания с ними или проверяем чтобы показания не были меньше учтеных
		#if [[ $(echo "${el_new} < ${el_old}" | bc) -eq 1  ||  $(echo "${hv_new} < ${hv_old}" | bc) -eq 1  
		#||  $(echo "${gv_new} < ${gv_old}" | bc) -eq 1 ]] 
		
		# делаем раздельную проверку показаний
		if [[ $(echo "${el_new} == 0" | bc) -eq 1 || $(echo "${el_new} < ${el_old}" | bc) -eq 1  ||  $(echo "${el_new} > ${sum_el}" | bc) -eq 1 ]] 
		then
			# электроэнергию не принимаем
			# echo "нет электроэнергии: $el_new."
			el_new=0
			#el_err='ЭЛ'
		fi
		if [[ $(echo "${hv_new} == 0" | bc) -eq 1 || $(echo "${hv_new} < ${hv_old}" | bc) -eq 1  ||  $(echo "${hv_new} > ${sum_hv}" | bc) -eq 1 ]] 
		then
			# холодную воду не принимаем
			hv_new=0
			#hv_err='ХВ'
		fi
		if [[ $(echo "${gv_new} == 0" | bc) -eq 1 || $(echo "${gv_new} < ${gv_old}" | bc) -eq 1  ||  $(echo "${gv_new} > ${sum_gv}" | bc) -eq 1 ]] 
		then
			# горячую воду не принимаем
			gv_new=0
			#gv_err='ГВ'
		fi
#			send_error "Отправлены неверные данные!\nПоказания меньше поданных вами ранее!" $fr

		## посмотрим не одни и те же показания шлет чел
		chk_povtor $lc $el_new $hv_new $gv_new
		# если повтор - завершение скрипта в функции
		##########

#### перенес из основного скрипта сюда
		no_in=""
		str_out_sms="ЛС:$lc;"
		str_out=";;;;Лицевой счет:$lc;"
		if ! [[ $(echo "${el_new} == 0" | bc) -eq 1 ]]; then
			str_out_sms="$str_out_smsЭЛ:$el_new;"
			str_out="$str_outТип прибора:Электро;Серийный номер:$eln;Показания:$el_new;"
			el_chk=1
		else
			no_in="ЭЛ;"
		fi
		if ! [[ $(echo "${hv_new} == 0" | bc) -eq 1 ]]; then
			str_out_sms="$str_out_smsХВ:$hv_new;"
			str_out="$str_outТип прибора:ХВС;Серийный номер:$hvn;Показания:$hv_new;"
			ho_chk=1
		else
			no_in="$no_inХВ;"
		fi
		if ! [[ $(echo "${gv_new} == 0" | bc) -eq 1 ]]; then
			str_out_sms="$str_out_smsГВ:$gv_new"
			str_out="$str_outТип прибора:ГВС;Серийный номер:$gvn;Показания:$gv_new;"
			go_chk=1
		else
			no_in="$no_inГВ"
		fi

		### контрольная запись показаний
		#echo "ho_chk:$ho_chk, hv_new:$hv_new, max_hv:$sum_hv" >/home/constantin/sms/$fr
		###
		# если все показания не прошли, отвечать или нет? пока отвечаю
		echo -e "От вас поступили показания:\n$str_out_sms" > /var/spool/sms/conv/mes$fn
  	
  	### отправка в лог
		echo -e "$date_now\nTo: $fr\nОт вас поступили показания:\n$str_out_sms" >> /var/log/smsd/sms_snt.log
	
		# если есть неверные
		if [[ $el_chk == 0 || $ho_chk == 0 || $go_chk == 0 ]]; then
			echo -e "Не приняты: $no_in" >> /var/spool/sms/conv/mes$fn
	
	  	### отправка в лог
  			echo -e "Не приняты: $no_in" >> /var/log/smsd/sms_snt.log
		fi
		echo -e "To: $fr\nAlphabet: UCS2\n" > /var/spool/sms/conv/$fn
  		iconv -f UTF-8 -t UCS-2BE /var/spool/sms/conv/mes$fn >> /var/spool/sms/conv/$fn
 		
  		######### принятые отправляем один раз. передумал- всегда
		# проверяем отправляли ли челу уже смс
  		# хотя обнаружил, что человек просто ошибается и исправяет ошибку. открываю
#		if ! ( grep -i $fr /home/constantin/sms/pokazania.dat > /dev/null ); then
   			#не отправляли смс
  			# отправляю ######################################################
	  		#if (( $fr == '79647407381'  || $fr == '79148805209' )); then
  			#	#cp /var/spool/sms/conv/$fn /home/constantin/sms/chk/
  				mv /var/spool/sms/conv/$fn /var/spool/sms/outgoing/
	  		#else
  			# пока сюда
   			#	mv /var/spool/sms/conv/$fn /home/constantin/sms/ANSWERS/
	   		#	fl_nm=${FILE1: -11}
   			#	chmod a+r /home/constantin/sms/ANSWERS/$fl_nm
   			#fi
	   		##########################################################################
	   		# если не мы, записываем номер телефона у кого приняли показания
   			if (( $fr != '79647407381'  && $fr != '79148805209' )); then
   				echo "$fr" >> /home/constantin/sms/pokazania.dat
   			fi
 #  		fi
  		############

  		####### чтоб не отправлять пока. проверочный вариант
  		# mv /var/spool/sms/conv/$fn /home/constantin/sms/chk/
  		# chmod a+r /home/constantin/sms/chk/$fn
  		# exit 0
  		########
  		
  		#формируем файл для фтп
  		message="$str_out;Контактный телефон:+$fr;;"
  		echo "$message" > /home/constantin/sms/tomail/$fn
  		rm /var/spool/sms/conv/mes$fn
		# разрешаем всем читать смс
  		chmod a+r /home/constantin/sms/tomail/$fn
  		
  		# и здесь отправка дубля показаний на эл.почту, пока отключил
  		# отправка на почту почему то не работает 
  		# echo -e "$message" | mail -s -r ck@onlight.pro "Incoming SMS from +$from" in@vivaluks.ru

		#### если все показания не прошли то на выход
		# (показания, если и были, но не прошли проверку, сбрасываются в 0)
		if [[ $(echo "$el_new+$hv_new+$gv_new" | bc) == 0 ]]; then
			exit 0
		fi
  		
  		## отправка в лог
  		# решил, что лучше отправлять в лог смс отправителю, см. выше. хотя и это тоже пусть будет
  		echo -e "На FTP:\n$message\n" >> /var/log/smsd/sms_snt.log

    	# на фтп не вкуриваются пути, только имя файла
  		cd /home/constantin/sms/tomail
  		ftp -in -u ftp://j880085_wp3:shE6Wctw58Q@159dz.spectrum.myjino.ru/site/getpu/inSMS/ $fn
#######
		
		# заменяем имеющиеся данные
		# кстати, а если отправил данные другой чел ошибшись лицевым..
		# наверно следует сделать проверку на занесенный телефон

	echo "Все путем! делаем апдейт записи"
##########>>>>>>>
		# решил добавлять все принятые данные, поэтому проверку отключаю
		#result=$(connect "select lchet, usluga, nomer, pokazania, date, phone 
		#from polucheno  where lchet like '$lc'");
	
		# проверка результата запроса (длина строки)
		#lns=${#result}
		# с пустыми переменными скл не работает
		# а пустая нужна для вставки в строку на фтп
		if [[ $eln == "" ]]; then
			eln=0
		fi
		if [[ $hvn == "" ]]; then
			hvn=0
		fi
		if [[ $gvn == "" ]]; then
			gvn=0
		fi
	echo 'Переменные сравнил'
		# если результат пустой- лицевого в таблице нет
		# лучше добавлять все полученные показания
		#if [[ $lns<1 ]]; then
		# 
		#if [[ 1 ]]; then

	echo 'Добавляю запись в получено'
			# добавляем запись или
			connect "insert into polucheno(lchet, usluga, nomer, pokazania, date, phone) values($lc, 'Электроэнергия', $eln, $el_new, '$date_now', $fr);"
			connect "insert into polucheno(lchet, usluga, nomer, pokazania, date, phone) values($lc, 'Холодное водоснабжение', $hvn, $hv_new, '$date_now', $fr);"
			connect "insert into polucheno(lchet, usluga, nomer, pokazania, date, phone) values($lc, 'Горячее водоснабжение', $gvn, $gv_new, '$date_now', $fr);"
		#else
			# пишем обновленые показания в отдельну базу
			# 
			#connect "update polucheno set pokazania = $el_new, date = '$date_now' where lchet = $lc and nomer = '$eln' and usluga like 'Электроэнергия';"
			#connect "update polucheno set pokazania=$hv_new, date='$date_now' where lchet = $lc and nomer = '$hvn' and usluga like 'Холодное водоснабжение';"
			#connect "update polucheno set pokazania=$gv_new, date='$date_now' where lchet = $lc and nomer = '$gvn' and usluga like 'Горячее водоснабжение';"
		#fi
###########<<<<<<<<<

		# записываем новые показания в бд
#		пока не буду записывать. если не одна запись по показаниям не туда можно записать
		# connect "update acc_indication set elec=$el_new, hv1=$hv_new, gv1=$gv_new where l_chet like '$lc'";
		
	#	connect "update data_indic set Потребление=$el_new where НомерЛицевогоСчета = '$lc' and НаименованиеУслуги = 'Электроэнергия' and Потребление>0";
	#	connect "update data_indic set Потребление=$hv_new where НомерЛицевогоСчета = '$lc' and НаименованиеУслуги = 'Холодное водоснабжение (счетчик)'";
	#	connect "update data_indic set Потребление=$gv_new where НомерЛицевогоСчета = '$lc' and НаименованиеУслуги = 'Горячее водоснабжение (счетчик)'";
	#fi
}
#####################################
#####################################

# отправка смс об ошибке. сообщение и номер тел. передаются параметрами
send_error()
{
	local err=$1
	local phn=$2
	# код ошибки 0 неверное
	# local met=$3
	# FILE1=`mktemp /tmp/ermes_XXXXXX`
	FILE=`mktemp /tmp/sms_err.XXXXXX`
	#day=$(date)
	#day=${day:7:2}
	# чувак, давай попроще ))
	day=$(date +%d)
	# дата в формате смс
	date_now=$(date '+%y-%m-%d %H:%M:%S')
		# если не мы
		if (( $phn != '79647407381' && $phn != '79148805209' )); then
      		# проверка по диапазону дат приема показаний
   			if (( $day < 19 || $day > 25 )); then
   				exit 0
      		fi
			# проверяем отправляли ли челу уже смс
			if ( grep -i $phn /home/constantin/sms/nomera.dat > /dev/null ); then
      			#уже отправляли смс
  				exit 0
  			else
      			echo "$phn" >> /home/constantin/sms/nomera.dat
      		fi
    	fi
		# сначала кладем во времменый каталог для преобразования
		#echo -e "$err" > /var/spool/sms/conv/err_mess.sms
		# нафига! все делаем зараз
    	echo -e "To: $phn\nAlphabet: UCS2\n" > $FILE
    	echo -e "$err" | iconv -f UTF-8 -t UCS-2BE >> $FILE

    	# пока не отправляю ######################################################
    	# запустил отправку
    	#if (( $phn == '79647407381' || $phn == '79148805209' )); then
    		mv $FILE /var/spool/sms/outgoing/
    	#else
   		# пока сюда
   		#	mv $FILE /home/constantin/sms/ANSWERS/
   		#	flnm=${FILE: -14}
   		#	chmod a+r /home/constantin/sms/ANSWERS/$flnm
   		#fi
   		##########################################################################
   		# ответ на ошибку в лог
   		echo -e "$date_now\n$phn\n$err\n" >> /var/log/smsd/sms_err.log	
}
##################################
##################################

# варианты кода

# пробный запрос. все путем!
sel-rec(){
	result=$(connect "select l_chet, elec, hv1, gv1 from acc_indication where l_chet like '$1'") ; 
	echo $result;
}

# чтобы использовать этот, должно быть точное количество разделительных пробелов

# sqlget='select id, code, name, brand  from table where id="'$id'"';
#  result=$(mysql -h$host -u $dbuser -p$dbpass $db -e "$sqlget" -N -s);
#      echo $result;
#      code=$(echo $result | cut -d " " -f 2);
#      name=$(echo $result | cut -d " " -f 3);
#      brand=$(echo $result | cut -d " " -f 4);

# Улица:м-н Березовый;Дом:28;Квартира:3.1;ФИО:;Лицевой счет:45645644;Тип прибора:Электро;Серийный  
# номер:jk;Показания:67.6;Тип прибора:ХВС;Серийный номер:gh;Показания:456;Тип прибора:ГВС;Серийный 
# номер:hg;Показания:678;Контактный телефон:+77777777777;E-mail:ff@jj.com;

# проверка работы скрипта
chck-arg () {
echo "param: ${1} ${2} ${3} ${4} ${5}" 
# получаем из строк только значения показаний
local lc=$1
local el=$2
local ho=$3
local go=$4
# с телефоном не определился.. отслеживать или нет соответствие
local fr=$5
echo "data: $lc $el $ho $go $fr" 
}
