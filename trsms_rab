#!/bin/bash
# рабочий вариант скрипта
# конвертируем смс и отправляем на почтовый ящик
# и в файл в sent
# конфигурация в файле /etc/smsd.conf
# запуск sudo smsd, остановка sudo pkill smsd
# расположение евентхандлера /usr/local/sbin/
# подключаем внешние функции
# кстати их тоже можно зафигачить в усер-локал-сбин, чтоб никто не залез при работе на чужой системе
# и вообще все рабочие вещи скинуть туда
source "/home/constantin/sms/functions"
# первая часть процедуры
# выделяем строики кто, когда, сообщение, преобразуем русский, пишем в файл
status="$1"
#  Может при­ни­мать зна­че­ния «CALL, RECEIVED, USSD, SENT, FAILED, REPORT»
file="$2"
# имя файла будет /var/spool/sms/incoming/GSM1.0eu5Pv"
# flnm=${file:24}
flnm=${file: -11}
# данные в смс заведомо плохие
el_ok=0
ho_ok=0
go_ok=0

case "$1" in
  RECEIVED)
    # FILE=`mktemp /tmp/smsd_XXXXXX`

    header=`head -13 $file | grep -e "^From: " -e "^Sent: " -e "^Received: "`
    from=`head -13 $file | grep -e "^From: " | awk '{print $2}'`

    if grep "Alphabet: UCS2" $file > /dev/null ; then
                message=`tail -n +14 $file | iconv -f UCS-2BE -t UTF-8`
        else
                message=`tail -n +14 $file`
    fi
    
    # если телега то в уссд ее и лехе на номер
    # рабочий вариант
    if (  grep "Tele2" $file > /dev/null ) ; then
      echo -e "$header\n$message\n" > /home/constantin/sms/ussd/$flnm
      chmod a+r /home/constantin/sms/ussd/$flnm
      # лехе или мне
      echo "$from"
      # для проверки отправлял себе
      # echo -e "To: 79647407381\nAlphabet: UCS2\n" > /tmp/$flnm
      echo -e "To: 79148805209\nAlphabet: UCS2\n" > /tmp/$flnm
      #echo -e "$lehe" >> /tmp/$flnm
      
      # криво преобразуется. только через файл
      #message=`echo -e "$message" | iconv -f UTF-8 -t UCS-2BE`
      echo -e "$message" >  /tmp/_$flnm
      iconv -f UTF-8 -t UCS-2BE /tmp/_$flnm >> /tmp/$flnm
      #mv /var/spool/sms/conv/$flnm /var/spool/sms/outgoing/
      mv /tmp/$flnm /var/spool/sms/outgoing/
      exit 0
    fi
    # если неправильный номер телефона, то на выход
    #is_dig=`echo "$from" | grep -o -E '[[:digit:]]+'`
    #is_dig=$[is_dig+1]
    # можно проще
    is_dig=${from//[^0-9]/}
    if [[ $(echo "${is_dig} < 79000000000" | bc) -eq 1 ]]; then  
      exit 0
    fi
    # пока всех отбрил
    #if [[ $(echo "${from} == 79647407381" | bc) -ne 1 ]]; then
    #if [[ $(echo "${from} == 79148805209" | bc) -ne 1 ]]; then
    #  exit 0
    #fi

        # отправка на почту почему то не работает пока отключу здесь
        # echo -e "$message" | mail -s "Incoming SMS from +$from" in@vivaluks.ru
        # перекладываем сюда с преобразованной кодировкой сообщения, понадобится для отправки об неверном вводе данных
        # и для получения показаний (заносится в переменную trfile)
        # лучше не использовать sent
        # echo -e "$header\n$message\n" > /var/spool/sms/sent/$flnm
        
        # удалить при ошибке
        # при неверных показаниях которые проверяются в функции, остается неудаленным
        echo -e "$header\n$message\n" > /var/spool/sms/conv/$flnm

# паралельно все пишем в лог
        echo -e "$header\n$message\n" >> /var/log/smsd/sms.log
# второй этап процесса
# проверяем корректность принятого смс
# обрабатываем уже преобразованный файл
# лучше не использовать sent
# trfile="/var/spool/sms/sent/$flnm"
trfile="/var/spool/sms/conv/$flnm"

# проверка на чужих, а то на смс разорение 
# при первоначальном смс никак не проверить принадлежность в базе ((

# делаю раздельный прием, поэтом любой из показателей
# теперь делаю прием однострочных показаний, поэтому проверяем для начала только наличие лицевого
if ! ( grep -i "^лс:" $trfile > /dev/null );    then

    rm /var/spool/sms/conv/$flnm
    send_error "Неверное СМС!\nВерный шаблон:\nЛС:00000000 ЭЛ:NNN*00000 ХВ:NNN*000 ГВ:NNN*000\nNNN - номер прибора" $from
    # при фуфле в смс выходим
    exit 0
fi
# инициализируем показания
el=0
ho=0
go=0

# если написано одной строкой
if ! ( grep -i "^эл:" $trfile > /dev/null || grep -i "^хв:" $trfile > /dev/null || grep -i "^гв:" $trfile > /dev/null ); then
  # разбираем значения из строки через пробелы
  # если нарушен порядок (лс, эл, хв, гв) то привет - данные не примутся
  lsch=$(echo "$message" | cut -d " " -f1)
  # было так 
  #ele=$(echo "$message" | cut -d " " -f2)
  #hov=$(echo "$message" | cut -d " " -f3)
  #gov=$(echo "$message" | cut -d " " -f4)
  
  # предусмотрен порядок эл-хв-гв, эл-хв, эл-гв, хв-гв и по отдельности
  if ( grep -i "эл:" $trfile > /dev/null ); then
    ele=$(echo "$message" | cut -d " " -f2)
    if ( grep -i "хв:" $trfile > /dev/null ); then
      hov=$(echo "$message" | cut -d " " -f3)
      if ( grep -i "гв:" $trfile > /dev/null ); then
        gov=$(echo "$message" | cut -d " " -f4)
      else
        gov=0
      fi
    else
      if ( grep -i "гв:" $trfile > /dev/null ); then
        gov=$(echo "$message" | cut -d " " -f3)
      else
        gov=0
      fi
      hov=0
    fi
  else
    if ( grep -i "хв:" $trfile > /dev/null ); then
      hov=$(echo "$message" | cut -d " " -f2)
      if ( grep -i "гв:" $trfile > /dev/null ); then
        gov=$(echo "$message" | cut -d " " -f3)
      else
        gov=0
      fi
    else
      if ( grep -i "гв:" $trfile > /dev/null ); then
        gov=$(echo "$message" | cut -d " " -f2)
      else
        gov=0
      fi
      hov=0
    fi
    ele=0
  fi
  # надо проверить порядок показаний и чтобы там была не лажа
  # лицевой будет проверен после раскладов, пропускаем
  # остальные показания проверяем по порядку
  # электроэнергия
  if ( [ ${#ele}>3 ] && ( echo "$ele" | grep -i "эл:" > /dev/null ) ); then
    # если норм
    # оказалось формейл требователен к регистру! поэтому катом
    #el=`echo "$ele" | formail -zx ЭЛ:`
    # берем значения
    el=`echo "$ele" | cut -d ":" -f 2`
    # убираем пробелы
    el=`echo ${el// /}`
    # проверяем есть ли цифры
    #is_dig=`echo "$el" | grep -o -E '[[:digit:]]+'`
    # лучше так
    el_chk=${el//[^0-9]/}
    #is_dig=$[is_dig+1]
    if (( ${#el_chk} > 0 )); then
      el_ok=1
    fi
  fi
  # холодная вода
  if ( [ ${#hov}>3 ] && ( echo "$hov" | grep -i "хв:" > /dev/null ) ); then
    ho=`echo "$hov" | cut -d ":" -f 2`
    ho=`echo ${ho// /}`
    # проверяем показания
    ho_chk=${ho//[^0-9]/}
    if (( ${#ho_chk} > 0 )); then
      ho_ok=1
    fi
  fi
  # горячая вода
  if ( [ ${#gov}>3 ] && ( echo "$gov" | grep -i "гв:" > /dev/null ) ); then
    go=`echo "$gov" | cut -d ":" -f 2`
    go=`echo ${go// /}`
    go_chk=${go//[^0-9]/}
    if (( ${#go_chk} > 0 )); then
      go_ok=1
    fi
  fi
else
  # показания построчные
  # получаем значения принятых показаний
  lsch=`head $trfile | grep -i "^лс:"`
  # далее по просьбе заказчика идут показатели еще 3 пар счетчиков.. но тогда нужно писать серийные номера каждого, 
  # чтобы была возможность их индентифицировать 

# проверяем все как и выше
  if grep -i "^эл:" $trfile > /dev/null ; then
    ele=`head $trfile | grep -i "^эл:"`
# оказалось формейл требователен к регистру! поэтому катом   
    #el=`echo "$ele" | formail -zx ЭЛ:`
    el=`echo "$ele" | cut -d ":" -f 2`
    # убираем пробелы
    el=`echo ${el// /}`
    el_chk=${el//[^0-9]/}
    if (( ${#el_chk} > 0 )); then
      el_ok=1
    fi
  fi
  if grep -i "^хв:" $trfile > /dev/null ; then
    hov=`head $trfile | grep -i "^хв:"`
    #ho=`echo "$hov" | formail -zx ХВ:`
    ho=`echo "$hov" | cut -d ":" -f 2`
    ho=`echo ${ho// /}`
    ho_chk=${ho//[^0-9]/}
    if (( ${#ho_chk} > 0 )); then
      ho_ok=1
    fi
  fi
  if grep -i "^гв:" $trfile > /dev/null ; then
    gov=`head $trfile | grep -i "^гв:"`
    #go=`echo "$gov" | formail -zx ГВ:`
    go=`echo "$gov" | cut -d ":" -f 2`
    go=`echo ${go// /}`
    go_chk=${go//[^0-9]/}
    if (( ${#go_chk} > 0 )); then
      go_ok=1
    fi
  fi
fi

  # проверяем что получилось. если все метки по по нулям (что по умолчанию) значит фуфло
  # ну намудрил
  #if [[ $(echo "${el} == 0" | bc) -eq 1 && $(echo "${ho} == 0" | bc) -eq 1 && $(echo "${go} == 1" | bc) -eq 1  ]]; then    
  if (( $el_ok==0 && $go_ok==0 && $ho_ok==0 )); then
    #statements
    send_error "Неверное СМС!\nВерный шаблон:\nЛС:00000000 ЭЛ:NNN*00000 ХВ:NNN*000 ГВ:NNN*000\nNNN - номер прибора" $from
    exit 0
  fi  
  
  #lc=`echo "$lsch" | formail -zx ЛС:`
  # оказалось формейл требователен к регистру! поэтому катом   
  lc=`echo "$lsch" | cut -d ":" -f 2`
  lc=`echo ${lc// /}`

  # проверка введенного лицевого, а не черте чо
  is_dig=`echo "$lc" | grep -o -E '[[:digit:]]+'`
  # или можно так
  #is_dig=${lc//[^0-9]/}
  #а это не катит
  #is_dig=$[is_dig+1]
  is_dig=$(echo "$is_dig+1" | bc)
  if (( $is_dig < 10000000 )); then
    send_error "Неверный лицевой счет!" $from
    exit 0
  fi
#########################
  fr=$from
  
  # отправляем их в функцию параметрами, вместо лажовых значений полетят нули
  # отправлял так
  # exch_bd $lc $el $ho $go $from $flnm
  # получалась лажа в имени файла при передаче более слова в предыдущем параметре. меняю местами
  exch_bd $from $flnm $lc $el $ho $go 
  # перенес весь процес в функцию
  exit 0
  ####################################################################
  ####################################################################

  # зачем два приема когда можно за раз
  # echo -e "От вас поступили показания:\n$lsch;$ele;$hov;$gov" > /var/spool/sms/conv/mes$flnm
  echo -e "To: $fr\nAlphabet: UCS2\n" > /var/spool/sms/conv/$flnm
  # iconv -f UTF-8 -t UCS-2BE /var/spool/sms/conv/mes$flnm >> /var/spool/sms/conv/$flnm
  echo -e "От вас поступили показания:\n$lsch;$ele;$hov;$gov" | iconv -f UTF-8 -t UCS-2BE >> /var/spool/sms/conv/$flnm
  mv /var/spool/sms/conv/$flnm /var/spool/sms/outgoing/
  #echo "$lsch;$ele;$hov;$gov;Телефон:+$fr" > /home/constantin/sms/tomail/$flnm
  message="$lsch;$ele;$hov;$gov;Телефон:+$fr"
  echo "$message" > /home/constantin/sms/tomail/$flnm
  # rm /var/spool/sms/conv/mes$flnm
# разрешаем всем читать смс
  chmod a+r /home/constantin/sms/tomail/$flnm
  # отправка на почту почему то не работает 
  
  # и здесь отправка дубля показаний на эл.почту, пока отключил
  # echo -e "$message" | mail -s -r ck@onlight.pro "Incoming SMS from +$from" in@vivaluks.ru
  # отправка в лог
  echo -e "$(date)\n$message\n" >> /var/log/smsd/sms_snt.log
    # на фтп не вкуриваются пути, только имя файла
  cd /home/constantin/sms/tomail
  ftp -in -u ftp://j880085_wp3:shE6Wctw58Q@159dz.spectrum.myjino.ru/site/getpu/inSMS/ $flnm
  #ftp -in -u ftp://j880085_wp3:shE6Wctw58Q@159dz.spectrum.myjino.ru/site/getpu/inSMS/ $flnm
    ;;
  USSD)
    # сигнализировать про снижение баланса
    # скидывать сообщения о балансе в каталог контроля смс о балансе
    cp /var/spool/sms/incoming/$file /home/constantin/sms/ussd/
    # или принудительно проверять баланс, например раз в неделю
    # в секции модема указать регулярную команду     
    # [mobile]
    # regular_run_cmd = AT+CUSD=1,"*100#",15;
    # regular_run_interval = 604800
    ;;  
  CALL) 
    # реагируем на звонок
    # пока убрал. см. файл на звонок
    send_error "Номер принимает только СМС." $fr
    # echo "Звонок!"
    #FILE=`mktemp /tmp/send_XXXXXX`
    #FILE1=`mktemp /tmp/send_XXXXXX`
    #echo -e "To: $from\nAlphabet: UCS2\n" > $FILE
    #echo "Номер принимает только СМС." > $FILE1
    #iconv -f UTF-8 -t UCS-2BE $FILE1  >> $FILE
    #FILE2=`mktemp /var/spool/sms/outgoing/send_XXXXXX`
    #mv $FILE $FILE2    
  ;;
  *)
    echo "$*" >>/var/log/smsd/others.log
    ;;
esac

